	--lualine status
	{

		"nvim-lualine/lualine.nvim",

		dependencies = {     
			"nvim-tree/nvim-web-devicons",
			"linrongbin16/lsp-progress.nvim",    
		},
	},
	

	--gc comment
	{ 
	    "numToStr/Comment.nvim",
	    event = "VeryLazy",
	    opts = {}
        },

        -- Fuzzy Finder (files, lsp, etc)
       {
             "nvim-telescope/telescope.nvim",
	     event = "VeryLazy",
	     branch = '0.1.x',
	     dependencies = {
	        	'nvim-lua/plenary.nvim',
		        -- Fuzzy Finder Algorithm which requires local dependencies to be built.
		        -- Only load if `make` is available. Make sure you have the system
	        	-- requirements installed.
		       {
		        	'nvim-telescope/telescope-fzf-native.nvim',
		        	  -- NOTE: If you are having trouble with this installation,
			          --       refer to the README for telescope-fzf-native for more instructions.
	         		build = 'make',
		        	cond = function()
				return vim.fn.executable 'make' == 1
		        	end,
	         	},
        	},
         },

         -- harpoon list of favourite files
        {
	       "ThePrimeagen/harpoon",
        	event = "VeryLazy",
        },
        --comment lines of code
        {
        	"tpope/vim-commentary",
        	 event = "VeryLazy",
        },

        {
	       "windwp/nvim-autopairs",
        	event = "InsertEnter",
        	opts = {}
        },


        {
         	-- Highlight, edit, and navigate code
        	'nvim-treesitter/nvim-treesitter',
        	event = "VeryLazy",
         	dependencies = {
	        	'nvim-treesitter/nvim-treesitter-textobjects',
        	},
        	build = ':TSUpdate',
        },

-- NOTE: This is where your plugins related to LSP can be installed.
--  The configuration is done below. Search for lspconfig to find it below.
{
	-- LSP Configuration & Plugins
	'neovim/nvim-lspconfig',
	event = "VeryLazy",
	dependencies = {
		-- Automatically install LSPs to stdpath for neovim
		{ 'williamboman/mason.nvim', config = true },
		'williamboman/mason-lspconfig.nvim',

		-- Useful status updates for LSP
		-- NOTE: `opts = {}` is the same as calling `require('fidget').setup({})`
		{ 'j-hui/fidget.nvim', opts = {} },

		-- Additional lua configuration, makes nvim stuff amazing!
		'folke/neodev.nvim',
	},
},

--java LSP
{
	"mfussenegger/nvim-jdtls",--java jdtls integration within nvim
	event = "VeryLazy",
},
-- auto-compilation
{
	'hrsh7th/nvim-cmp',
	event = "InsertEnter",
	dependencies = {
		-- Snippet Engine & its associated nvim-cmp source
		'L3MON4D3/LuaSnip',
		'saadparwaiz1/cmp_luasnip',

		-- Adds LSP completion capabilities
		'hrsh7th/cmp-nvim-lsp',

		-- Adds a number of user-friendly snippets
		'rafamadriz/friendly-snippets',
		'hrsh7th/cmp-buffer',
		'hrsh7th/cmp-path',
		'hrsh7th/cmp-cmdline',
	},
},



--Debugging
{ "rcarriga/nvim-dap-ui",
dependencies = {
	"mfussenegger/nvim-dap",
	"theHamsta/nvim-dap-virtual-text",
	"nvim-telescope/telescope-dap.nvim",
},
  },

  --reset/postman
  {
	  "diepm/vim-rest-console",
	  event = "VeryLazy",
  }
  --git
  --"f-person/git-blame.nvim",


  --ChatGPT
  {
	  "jackMort/ChatGPT.nvim",
	  event = "VeryLazy",
	  config = function()
		  require("chatgpt").setup()
	  end,
	  dependencies = {
		  "MunifTanjim/nui.nvim",
		  "nvim-lua/plenary.nvim",
		  "nvim-telescope/telescope.nvim",
	  },
  },

  {"bluz71/vim-nightfly-guicolors", lazy = false},

